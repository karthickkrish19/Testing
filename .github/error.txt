module "optum_ips" {
  source = "git::https://github.com/dojo360/optum-ips"
}

module "storage_accounts" {
  for_each  = toset(local.staccounts)
  source                     = "git::https://github.com/dojo360/azure-storage-account//profiles/custom?ref=v19.1.4"
  name                       = "st${each.key}"
  namespace                  = var.environment
  resource_group_name        = var.resource_group_name
  location                   = var.location
  tags                       = var.common_tags
  containers                 = []
  virtual_network_subnet_ids = []
  private_endpoints          = local.private_endpoint
  account_replication_type   = "RAGRS"
  allow_blob_public_access   = false
  observability              = {
      enabled                = true
      diagnostic_settings    = {
        log_analytics_workspace_id  = var.log_analytics_workspace_id
      }
  }
  naming_rules = {
    include_location_in_name = var.include_location_in_name
    use_abbreviated_location = false
    separator                = ""
  }
}

/* This would be used once Dojo team provides support for RBAC Authentication
resource "azurerm_role_assignment" "app_api_blob_owner" {
  for_each  = toset(local.staccounts)
  scope                       = module.storage_accounts[each.key].id
  role_definition_name        = "Storage Blob Data Contributor"
  principal_id                = var.api_app_identity
}

resource "azurerm_role_assignment" "app_webjobs_blob_owner" {
  for_each  = toset(local.staccounts)
  scope                       = module.storage_accounts[each.key].id
  role_definition_name        = "Storage Blob Data Owner"
  principal_id                = var.web_jobs_app_identity
}
*/

module "st_pl_endpoint" {
  for_each  = toset(local.staccounts)
  source                      = "git::https://github.com/dojo360/azure-private-link//profiles/private-endpoint?ref=v19.1.2"
  name                        = module.storage_accounts[each.key].name
  namespace                   = var.environment
  location                    = var.location
  resource_group_name         = var.resource_group_name
  subnet_id                   = var.snet_pl_id
  private_dns_zone_group      = {
    name                            = var.blob_dns_zone_name
    private_dns_zone_ids            = [var.blob_dns_zone_id]
  }
  private_service_connection  = {
    private_connection_resource_id  = module.storage_accounts[each.key].id
    subresource_names               = ["blob"]
  }
  tags                        = var.common_tags
}

resource "azurerm_private_dns_zone_virtual_network_link" "dns_vnet_link" {
  name                  = format("blob-dns-vnet-link-%s", var.environment)
  resource_group_name   = var.resource_group_name
  private_dns_zone_name = var.blob_dns_zone_name
  registration_enabled  = false
  virtual_network_id    = var.vnet_id
  tags                  = var.common_tags
}

 Error: Unsupported argument
│ 
│   on ../modules/storage/main.tf line 17, in module "storage_accounts":
│   17:   allow_blob_public_access   = false
│ 
│ An argument named "allow_blob_public_access" is not expected here.
