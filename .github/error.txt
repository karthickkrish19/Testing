import re  
import asyncio

class cleanTokeniser:

    def cleanListText(self, texts):
        removeDupWord = self.remove_duplicates(texts)
        cleandata = self.cleanlistdata(removeDupWord)
        return cleandata

    async def remove_duplicates(self, text_list):
        seen = set()
        result = []
        for word in text_list:
            if word not in seen:
                seen.add(word)
                result.append(word)
        return await result 

    def cleanlistdata(self, uniqdata):        
        # Step 1: Remove HTML tags
        no_html = re.sub(r'<[^>]+>', '', uniqdata)            
        # Step 2: Replace multiple spaces with a single space
        single_spaced = re.sub(r'\s+', ' ', no_html)            
        # Step 3: Strip leading and trailing whitespace
        cleaned = single_spaced.strip()
        # text = text.translate(str.maketrans('', '', string.punctuation))
        return cleaned  
    
    async def expand_contractions(text):
        contractions_dict = {
            "aren't": "are not",
            "can't": "cannot",
            "could've": "could have",
            "couldn't": "could not",
            "didn't": "did not",
            "doesn't": "does not",
            "don't": "do not",
            "hadn't": "had not",
            "hasn't": "has not",
            "haven't": "have not",
            "he'd": "he had",
            "he'll": "he will",
            "he's": "he is",
            "I'd": "I had",
            "I'll": "I will",
            "I'm": "I am",
            "I've": "I have",
            "isn't": "is not",
            "it'd": "it had",
            "it'll": "it will",
            "it's": "it is",
            "let's": "let us",
            "might've": "might have",
            "mightn't": "might not",
            "must've": "must have",
            "mustn't": "must not",
            "shan't": "shall not",
            "she'd": "she had",
            "she'll": "she will",
            "she's": "she is",
            "should've": "should have",
            "shouldn't": "should not",
            "that's": "that is",
            "there's": "there is",
            "they'd": "they had",
            "they'll": "they will",
            "they're": "they are",
            "they've": "they have",
            "wasn't": "was not",
            "we'd": "we had",
            "we're": "we are",
            "we've": "we have",
            "weren't": "were not",
            "what's": "what is",
            "where's": "where is",
            "who's": "who is",
            "won't": "will not",
            "would've": "would have",
            "wouldn't": "would not",
            "you'd": "you had",
            "you'll": "you will",
            "you're": "you are",
            "you've": "you have"
        }

        # Replace contractions in text
        for contraction, full_form in contractions_dict.items():
            text = text.replace(contraction, full_form)            
            # existing_list = ['I']
            # new_words = "could have".split()
            # existing_list.extend(new_words)
            # print(existing_list)
        return await text
